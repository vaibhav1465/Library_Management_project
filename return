package library_management_project;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JTextField;

public class return_b extends JFrame implements ActionListener{
	 JLabel head,id_l;
	    JTextField id;
	    JButton submit,back;
	     Connection con;
		 PreparedStatement ps;
		 ResultSet st;
	
	 return_b() {
	        setComponents();
	        setConnection();
	        setTitle("Return Book");
	        setSize(500, 500);
	        setLayout(null);
	        getContentPane().setBackground(Color.cyan);
	        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	        setVisible(true);
	        setResizable(false);
	    }
	 void setConnection()
	    {
	    	try {
	            Class.forName("com.mysql.cj.jdbc.Driver");
	            con=DriverManager.getConnection("jdbc:mysql://localhost:3306/library_management_system","root","");
	             } catch (ClassNotFoundException e) {
	            e.printStackTrace();
	        } catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	  void setComponents() {
	        head=new JLabel("Return Book");
	        id_l=new JLabel("Enter Book_id :");
	        id=new JTextField();
	        submit=new JButton("Submit");
	        back=new JButton("Back");

	        head.setFont(new Font("Courier New",Font.BOLD,40));
	        head.setForeground(Color.blue);
	        id_l.setFont(new Font("Courier New",Font.BOLD,27));
	        id.setFont(new Font("Courier New",Font.BOLD,25));
	        submit.setFont(new Font("Courier New",Font.BOLD,25));
	        back.setFont(new Font("Courier New",Font.BOLD,25));

	        head.setBounds(130,50,400,50);
	        id_l.setBounds(50,150,250,50);
	        id.setBounds(310,150,100,50);
	        submit.setBounds(50,300,200,50);
	        back.setBounds(300,300,100,50);

	        add(head);
	        add(id_l);
	        add(id);
	        add(submit);
	        add(back);

	        submit.addActionListener(this);
	        back.addActionListener(this);

	    }
	  void rBook() {
		     String i=id.getText();
		     try {
				ps = con.prepareStatement("update Books set Status=0 where Book_Id=?");
			     ps.setString(1,i);
			     ps.executeUpdate();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		   

		    }
	  @Override
	    public void actionPerformed(ActionEvent e) {
	      if(e.getSource()==submit)
	      {
	          rBook();
	      }
	      else {
	          try {
				con.close();
			} catch (SQLException e1) {
				// TODO Auto-generated catch block
				e1.printStackTrace();
			}
	          this.dispose();
	      }

	    }

}
